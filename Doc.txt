docket pull centos -> goes on DockerHub and pull the centos image

docker run nameOfTheImageToPull[:possibleTag]
	-d [or --detach, puts the container in background straight from the start and prints the container ID]
	-t
	--name nameToGiveToThisContainer
	-p hostPort:containerPort [--publish] specify the port]
	-v nomDuVolume:<containerPath>
	--rm
	--mount type=volume,src=<volumeName>,target=<containerPath>

docker ps -> see the different dockers currenty running
	-a [display all container, non only the running ones]

docker exec -it containerName bash/sh -> goes into the specified docker
exit

docker stop containerName or containerID
docket start containerName or containerID
docker stats

docker images
docker info

docker logs + containerName or containerID

docker rmi containerID [delete docker image]

docker build directoryInWhichTheDockerfileIs
	-t [or --tag sets a name and optionnally a tag in the "name:tag" format]

docker history + containerName or containerID


docker volume [create, rm, ls, inspect]
--------------------------------------------------------

FROM debian:bullseye-slim
WORKDIR /app
ARG clé=valeur
ENV environment=production
USER kbrousse
ADD <source> <destination>	[ajout de fichiers ou répertoires, peut être une url, dépôt git...]
COPY	[comme ADD mais sans récupératin d'éléments distants]
RUN	[lancer des commandes shell]
CMD	["python3", "-m", "flask", "run"]	[commande lancée dans le conteneur, sous forme de liste, peut être surchargée par entrypoint]
ENTRYPOINT
LABEL key=value
EXPOSE 80/tcp	[déclaration des ports en écoute par le processus, plusieurs lignes possibles]
VOLUME ["/var/www", "/var/log/apache2", "/etc/apache2"]	[déclare des volumes de manière séparée, liste]

